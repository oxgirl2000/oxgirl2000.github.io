---
interface Props {}

const {} = Astro.props;
---

<div class="sidebar">
  <div class="container">
    <div class="item interactive">
      <a href="/"> home</a>
    </div>

    <div class="item interactive">
      <a href="/#projects"> projects</a>
    </div>

    <div class="item interactive">
      <a href="/#contact"> contact</a>
    </div>

    <div class="item interactive">
      <a href="/#blog"> blog</a>
    </div>
  </div>
  <div class="containerWrapper"></div>
</div>
<div class="mask"></div>

<style>
  :root {
    --sidebarWidth: 8rem;
    --sidebarPostHeight: 12rem;
  }

  .sidebar {
    /* z-index: 2; */
    background: var(--ox-bg);
    margin: 0 var(--padding);
    /* flex-grow: 2; */

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;
  }

  .container {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;
    gap: calc(var(--padding) * 2);
    overflow: hidden;
  }

  .item {
    /* border-bottom: var(--border); */
    /* border-color: var(--ox-pink); */
    font-size: 1rem;
  }

  .item a {
    text-decoration: underline var(--ox-pink) 2px;
    transition: var(--transition);
  }

  .item a:is(:hover, :focus-within) {
    /* border-color: var(--ox-orange); */
    text-decoration-color: var(--ox-orange);
  }

  .mask {
    display: none;
  }

  /* @container mobile (min-width: 0px) { */
  @media screen and (max-width: 600px) {
    .sidebar {
      transition: var(--transition);
      border: var(--border);
      border-color: var(--ox-dim);
      border-radius: var(--border-radius);
      justify-content: flex-end;
      z-index: 2;
      /* overflow: hidden; */
      padding: var(--padding);
      width: var(--sidebarWidth);
      height: 1.4rem;
    }

    .containerWrapper {
      transition: var(--transition);
      border-bottom: var(--border);
      border-width: var(--border);
      border-color: var(--ox-pink);
      width: 100%;
    }

    .container {
      transition: var(--transition);
      flex-direction: column;
      gap: 0rem;
      justify-content: space-evenly;
      align-items: flex-end;

      /* height: 100%; */
      height: 0%;
      visibility: hidden;
      opacity: 0;
    }

    .mask {
      display: block;
      position: absolute;
      left: 0;
      top: -100vh;
      width: 100vw;
      height: 100vh;
      flex-basis: 0px;
      background: var(--ox-bg-gradient);
      transition: var(--transition);
      z-index: 1;
    }

    .sidebar:is(:hover, :focus-within) {
      height: var(--sidebarPostHeight);
      border-color: var(--ox-orange);

      justify-content: flex-start;
    }

    .sidebar:is(:hover, :focus-within) .container {
      visibility: visible;
      opacity: 1;
      height: 100%;
      gap: 0.8rem;
    }

    .sidebar:is(:hover, :focus-within) .containerWrapper {
      opacity: 0;
      /* width: 0%; */
    }

    .sidebar:is(:hover, :focus-within) ~ .mask {
      /* z-index: 1; */
      /* opacity: 0.4; */
      top: 0px;
    }
  }
</style>
